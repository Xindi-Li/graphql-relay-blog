{"ast":null,"code":"var _CreatePostViewerQuery,\n    _jsxFileName = \"/Users/xindi/xindi/relay-tutorial/src/components/CreatePost.js\";\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport CreatePostMutation from '../mutations/CreatePostMutation';\nimport { QueryRenderer, graphql } from 'react-relay';\nimport environment from '../Environment';\nconst styles = {\n  createPostWrapper: {\n    margin: 30,\n    textAlign: 'center'\n  },\n  titleWrapper: {\n    display: 'block',\n    width: '100%',\n    textAlign: 'center',\n    fontSize: '30px',\n    border: 'none',\n    outlineWidth: 0\n  },\n  contentWrapper: {\n    width: '100%',\n    height: '500px',\n    fontSize: '20px',\n    marginTop: '20px'\n  },\n  postButtonWrapper: {\n    padding: 10,\n    background: 'white',\n    border: '2px solid indianred',\n    color: 'indianred',\n    borderRadius: 6\n  }\n};\nconst createPostViewerQuery = _CreatePostViewerQuery !== void 0 ? _CreatePostViewerQuery : (_CreatePostViewerQuery = require(\"./__generated__/CreatePostViewerQuery.graphql\"), _CreatePostViewerQuery.hash && _CreatePostViewerQuery.hash !== \"ae4f0362ae37e6fe83706ed5dd13309c\" && console.error(\"The definition of 'CreatePostViewerQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _CreatePostViewerQuery);\n\nclass CreatePost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      content: \"\",\n      user: null\n    };\n\n    this.handlePost = viewerId => {\n      const {\n        title,\n        content\n      } = this.state;\n      CreatePostMutation(title, content, viewerId, () => {\n        this.props.history.push('/');\n      });\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem('User');\n\n    if (user) {\n      this.setState({\n        user: JSON.parse(user)\n      });\n    } else {\n      window.location.href;\n    }\n  }\n\n  render() {\n    return React.createElement(QueryRenderer, {\n      environment: environment,\n      query: createPostViewerQuery,\n      render: ({\n        error,\n        props\n      }) => {\n        if (error) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, error.message);\n        } else if (props) {\n          return React.createElement(\"div\", {\n            style: styles.createPostWrapper,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            style: styles.titleWrapper,\n            value: this.state.title,\n            placeholder: \"Title\",\n            onChange: e => this.setState({\n              title: e.target.value\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }), React.createElement(\"textarea\", {\n            style: styles.contentWrapper,\n            value: this.state.content,\n            placeholder: \"Content\",\n            onChange: e => this.setState({\n              content: e.target.value\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }), this.state.title && this.state.content && React.createElement(\"button\", {\n            style: styles.postButtonWrapper,\n            onClick: () => this.handlePost(props.viewer.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \"Post\"));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \"Loading\");\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withRouter(CreatePost);","map":{"version":3,"sources":["/Users/xindi/xindi/relay-tutorial/src/components/CreatePost.js"],"names":["React","Component","withRouter","CreatePostMutation","QueryRenderer","graphql","environment","styles","createPostWrapper","margin","textAlign","titleWrapper","display","width","fontSize","border","outlineWidth","contentWrapper","height","marginTop","postButtonWrapper","padding","background","color","borderRadius","createPostViewerQuery","CreatePost","state","title","content","user","handlePost","viewerId","props","history","push","componentDidMount","localStorage","getItem","setState","JSON","parse","window","location","href","render","error","message","e","target","value","viewer","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport CreatePostMutation from '../mutations/CreatePostMutation';\nimport { QueryRenderer, graphql } from 'react-relay';\nimport environment from '../Environment';\n\n\nconst styles = {\n    createPostWrapper: { margin: 30, textAlign: 'center' },\n    titleWrapper: {\n        display: 'block',\n        width: '100%',\n        textAlign: 'center',\n        fontSize: '30px',\n        border: 'none',\n        outlineWidth: 0,\n    },\n    contentWrapper: {\n        width: '100%',\n        height: '500px',\n        fontSize: '20px',\n        marginTop: '20px',\n    },\n    postButtonWrapper: {\n        padding: 10,\n        background: 'white',\n        border: '2px solid indianred',\n        color: 'indianred',\n        borderRadius: 6,\n    },\n};\n\nconst createPostViewerQuery = graphql`\n    query CreatePostViewerQuery{\n        viewer{\n            id\n        }\n    }\n`;\n\nclass CreatePost extends Component {\n    state = {\n        title: \"\",\n        content: \"\",\n        user: null\n    };\n\n    handlePost = viewerId => {\n        const { title, content } = this.state;\n        CreatePostMutation(title, content, viewerId, () => {\n            this.props.history.push('/');\n        })\n    };\n\n    componentDidMount() {\n        const user = localStorage.getItem('User');\n        if(user){\n            this.setState({user: JSON.parse(user)});\n        }else{\n            window.location.href\n        }\n    }\n\n    render() {\n        return (\n            <QueryRenderer\n                environment={environment}\n                query={createPostViewerQuery}\n                render={({ error, props }) => {\n                    if (error) {\n                        return <div>{error.message}</div>\n                    } else if (props) {\n                        return (\n                            <div style={styles.createPostWrapper}>\n                                <input\n                                    style={styles.titleWrapper}\n                                    value={this.state.title}\n                                    placeholder=\"Title\"\n                                    onChange={e => this.setState({ title: e.target.value })} />\n                                <textarea\n                                    style={styles.contentWrapper}\n                                    value={this.state.content}\n                                    placeholder=\"Content\"\n                                    onChange={e =>\n                                        this.setState({\n                                            content: e.target.value,\n                                        })\n                                    } />\n                                {this.state.title &&\n                                    this.state.content && (\n                                        <button\n                                            style={styles.postButtonWrapper}\n                                            onClick={() => this.handlePost(props.viewer.id)}>\n                                            Post\n                                         </button>\n                                    )}\n                            </div>\n                        )\n                    } else {\n                        return <div>Loading</div>\n                    }\n                }} />\n        );\n    }\n}\n\nexport default withRouter(CreatePost);"]},"metadata":{},"sourceType":"module"}