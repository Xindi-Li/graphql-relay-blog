{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar validateMutation = function validateMutation() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  var addFieldToDiff = function addFieldToDiff(path, diff, isScalar) {\n    var deepLoc = diff;\n    path.split('.').forEach(function (key, index, arr) {\n      if (deepLoc[key] == null) {\n        deepLoc[key] = {};\n      }\n\n      if (isScalar && index === arr.length - 1) {\n        deepLoc[key] = '<scalar>';\n      }\n\n      deepLoc = deepLoc[key];\n    });\n  };\n\n  validateMutation = function validateMutation(optimisticResponse, mutation, variables) {\n    var operationName = mutation.operation.name;\n    var context = {\n      path: 'ROOT',\n      visitedPaths: new Set(),\n      variables: variables || {},\n      missingDiff: {},\n      extraDiff: {}\n    };\n    validateSelections(optimisticResponse, mutation.operation.selections, context);\n    validateOptimisticResponse(optimisticResponse, context);\n    process.env.NODE_ENV !== \"production\" ? warning(context.missingDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please define fields for all of\\n%s', operationName, JSON.stringify(context.missingDiff.ROOT, null, 2)) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(context.extraDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please remove all fields of\\n%s', operationName, JSON.stringify(context.extraDiff.ROOT, null, 2)) : void 0;\n  };\n\n  var validateSelections = function validateSelections(optimisticResponse, selections, context) {\n    selections.forEach(function (selection) {\n      return validateSelection(optimisticResponse, selection, context);\n    });\n  };\n\n  var validateSelection = function validateSelection(optimisticResponse, selection, context) {\n    switch (selection.kind) {\n      case 'Condition':\n        validateSelections(optimisticResponse, selection.selections, context);\n        return;\n\n      case 'ScalarField':\n      case 'LinkedField':\n        return validateField(optimisticResponse, selection, context);\n\n      case 'InlineFragment':\n        var type = selection.type;\n        selection.selections.forEach(function (subselection) {\n          if (optimisticResponse.__typename !== type) {\n            return;\n          }\n\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n\n      case 'ClientExtension':\n      case 'ModuleImport':\n      case 'LinkedHandle':\n      case 'ScalarHandle':\n      case 'Defer':\n      case 'Stream':\n        {\n          // TODO(T35864292) - Add missing validations for these types\n          return;\n        }\n\n      default:\n        selection;\n        return;\n    }\n  };\n\n  var validateField = function validateField(optimisticResponse, field, context) {\n    var fieldName = field.alias || field.name;\n    var path = \"\".concat(context.path, \".\").concat(fieldName);\n    context.visitedPaths.add(path);\n\n    switch (field.kind) {\n      case 'ScalarField':\n        if (optimisticResponse.hasOwnProperty(fieldName) === false) {\n          addFieldToDiff(path, context.missingDiff, true);\n        }\n\n        return;\n\n      case 'LinkedField':\n        var selections = field.selections;\n\n        if (optimisticResponse[fieldName] === null || Object.hasOwnProperty(fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n\n        if (field.plural) {\n          if (Array.isArray(optimisticResponse[fieldName])) {\n            optimisticResponse[fieldName].forEach(function (r) {\n              if (r !== null) {\n                validateSelections(r, selections, (0, _objectSpread2[\"default\"])({}, context, {\n                  path: path\n                }));\n              }\n            });\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        } else {\n          if (optimisticResponse[fieldName] instanceof Object) {\n            validateSelections(optimisticResponse[fieldName], selections, (0, _objectSpread2[\"default\"])({}, context, {\n              path: path\n            }));\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        }\n\n    }\n  };\n\n  var validateOptimisticResponse = function validateOptimisticResponse(optimisticResponse, context) {\n    if (Array.isArray(optimisticResponse)) {\n      optimisticResponse.forEach(function (r) {\n        if (r instanceof Object) {\n          validateOptimisticResponse(r, context);\n        }\n      });\n      return;\n    }\n\n    Object.keys(optimisticResponse).forEach(function (key) {\n      var value = optimisticResponse[key];\n      var path = \"\".concat(context.path, \".\").concat(key);\n\n      if (!context.visitedPaths.has(path)) {\n        addFieldToDiff(path, context.extraDiff);\n        return;\n      }\n\n      if (value instanceof Object) {\n        validateOptimisticResponse(value, (0, _objectSpread2[\"default\"])({}, context, {\n          path: path\n        }));\n      }\n    });\n  };\n}\n\nmodule.exports = validateMutation;","map":{"version":3,"sources":["/Users/xindi/xindi/relay-tutorial/node_modules/relay-runtime/lib/mutations/validateMutation.js"],"names":["_interopRequireDefault","require","_objectSpread2","warning","validateMutation","process","env","NODE_ENV","addFieldToDiff","path","diff","isScalar","deepLoc","split","forEach","key","index","arr","length","optimisticResponse","mutation","variables","operationName","operation","name","context","visitedPaths","Set","missingDiff","extraDiff","validateSelections","selections","validateOptimisticResponse","ROOT","JSON","stringify","selection","validateSelection","kind","validateField","type","subselection","__typename","field","fieldName","alias","concat","add","hasOwnProperty","Object","undefined","plural","Array","isArray","r","keys","value","has","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar validateMutation = function validateMutation() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  var addFieldToDiff = function addFieldToDiff(path, diff, isScalar) {\n    var deepLoc = diff;\n    path.split('.').forEach(function (key, index, arr) {\n      if (deepLoc[key] == null) {\n        deepLoc[key] = {};\n      }\n\n      if (isScalar && index === arr.length - 1) {\n        deepLoc[key] = '<scalar>';\n      }\n\n      deepLoc = deepLoc[key];\n    });\n  };\n\n  validateMutation = function validateMutation(optimisticResponse, mutation, variables) {\n    var operationName = mutation.operation.name;\n    var context = {\n      path: 'ROOT',\n      visitedPaths: new Set(),\n      variables: variables || {},\n      missingDiff: {},\n      extraDiff: {}\n    };\n    validateSelections(optimisticResponse, mutation.operation.selections, context);\n    validateOptimisticResponse(optimisticResponse, context);\n    process.env.NODE_ENV !== \"production\" ? warning(context.missingDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please define fields for all of\\n%s', operationName, JSON.stringify(context.missingDiff.ROOT, null, 2)) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(context.extraDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please remove all fields of\\n%s', operationName, JSON.stringify(context.extraDiff.ROOT, null, 2)) : void 0;\n  };\n\n  var validateSelections = function validateSelections(optimisticResponse, selections, context) {\n    selections.forEach(function (selection) {\n      return validateSelection(optimisticResponse, selection, context);\n    });\n  };\n\n  var validateSelection = function validateSelection(optimisticResponse, selection, context) {\n    switch (selection.kind) {\n      case 'Condition':\n        validateSelections(optimisticResponse, selection.selections, context);\n        return;\n\n      case 'ScalarField':\n      case 'LinkedField':\n        return validateField(optimisticResponse, selection, context);\n\n      case 'InlineFragment':\n        var type = selection.type;\n        selection.selections.forEach(function (subselection) {\n          if (optimisticResponse.__typename !== type) {\n            return;\n          }\n\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n\n      case 'ClientExtension':\n      case 'ModuleImport':\n      case 'LinkedHandle':\n      case 'ScalarHandle':\n      case 'Defer':\n      case 'Stream':\n        {\n          // TODO(T35864292) - Add missing validations for these types\n          return;\n        }\n\n      default:\n        selection;\n        return;\n    }\n  };\n\n  var validateField = function validateField(optimisticResponse, field, context) {\n    var fieldName = field.alias || field.name;\n    var path = \"\".concat(context.path, \".\").concat(fieldName);\n    context.visitedPaths.add(path);\n\n    switch (field.kind) {\n      case 'ScalarField':\n        if (optimisticResponse.hasOwnProperty(fieldName) === false) {\n          addFieldToDiff(path, context.missingDiff, true);\n        }\n\n        return;\n\n      case 'LinkedField':\n        var selections = field.selections;\n\n        if (optimisticResponse[fieldName] === null || Object.hasOwnProperty(fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n\n        if (field.plural) {\n          if (Array.isArray(optimisticResponse[fieldName])) {\n            optimisticResponse[fieldName].forEach(function (r) {\n              if (r !== null) {\n                validateSelections(r, selections, (0, _objectSpread2[\"default\"])({}, context, {\n                  path: path\n                }));\n              }\n            });\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        } else {\n          if (optimisticResponse[fieldName] instanceof Object) {\n            validateSelections(optimisticResponse[fieldName], selections, (0, _objectSpread2[\"default\"])({}, context, {\n              path: path\n            }));\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        }\n\n    }\n  };\n\n  var validateOptimisticResponse = function validateOptimisticResponse(optimisticResponse, context) {\n    if (Array.isArray(optimisticResponse)) {\n      optimisticResponse.forEach(function (r) {\n        if (r instanceof Object) {\n          validateOptimisticResponse(r, context);\n        }\n      });\n      return;\n    }\n\n    Object.keys(optimisticResponse).forEach(function (key) {\n      var value = optimisticResponse[key];\n      var path = \"\".concat(context.path, \".\").concat(key);\n\n      if (!context.visitedPaths.has(path)) {\n        addFieldToDiff(path, context.extraDiff);\n        return;\n      }\n\n      if (value instanceof Object) {\n        validateOptimisticResponse(value, (0, _objectSpread2[\"default\"])({}, context, {\n          path: path\n        }));\n      }\n    });\n  };\n}\n\nmodule.exports = validateMutation;"]},"metadata":{},"sourceType":"script"}