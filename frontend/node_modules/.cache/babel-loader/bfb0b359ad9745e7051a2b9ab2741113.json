{"ast":null,"code":"var _jsxFileName = \"/Users/xindi/xindi/relay-tutorial/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport CreateUserMutation from '../mutations/';\nconst styles = {\n  inputText: {\n    display: 'block',\n    fontSize: '20px',\n    marginBottom: '10px'\n  },\n  inputButton: {\n    display: 'block',\n    padding: 10,\n    background: 'white',\n    border: '2px solid indianred',\n    color: 'indianred',\n    borderRadius: 6,\n    marginBottom: '10px'\n  }\n};\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: true,\n      username: '',\n      password: '',\n      fullname: ''\n    };\n\n    this.confirm = () => {\n      const {\n        login,\n        username,\n        password,\n        fullname\n      } = this.state;\n\n      if (login) {\n        LoginUserMutation(username, password, user => {\n          localStorage.setItem('User', JSON.stringify(user));\n          this.props.history.push('/');\n        });\n      } else {\n        CreateUserMutation(username, password, fullname, user => {\n          localStorage.setItem('User', JSON.stringify(user));\n          this.props.history.push('/');\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.login ? 'Login' : 'Sign Up'), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: StyleSheet.inputText,\n      value: this.state.username,\n      onChange: e => {\n        this.setState({\n          username: e.target.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      style: StyleSheet.inputText,\n      value: this.state.password,\n      onChange: e => {\n        this.setState({\n          password: e.target.value\n        });\n      },\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), !this.state.login && React.createElement(\"input\", {\n      style: StyleSheet.inputText,\n      value: this.state.fullname,\n      onChange: e => {\n        this.setState({\n          fullname: e.target.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"Fullname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: StyleSheet.inputButton,\n      onClick: () => this.confirm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.login ? 'Log in' : 'Sign up'), React.createElement(\"button\", {\n      style: StyleSheet.inputButton,\n      onClick: () => this.setState({\n        login: !this.state.login\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.login ? 'Need to create an account?' : 'Already have an account?')));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/xindi/xindi/relay-tutorial/src/components/Login.js"],"names":["React","Component","withRouter","CreateUserMutation","styles","inputText","display","fontSize","marginBottom","inputButton","padding","background","border","color","borderRadius","Login","state","login","username","password","fullname","confirm","LoginUserMutation","user","localStorage","setItem","JSON","stringify","props","history","push","render","flexDirection","alignItems","StyleSheet","e","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport CreateUserMutation from '../mutations/';\n\nconst styles = {\n    inputText: {\n        display: 'block',\n        fontSize: '20px',\n        marginBottom: '10px'\n    },\n    inputButton: {\n        display: 'block',\n        padding: 10,\n        background: 'white',\n        border: '2px solid indianred',\n        color: 'indianred',\n        borderRadius: 6,\n        marginBottom: '10px'\n    }\n};\n\nclass Login extends Component {\n    state = {\n        login: true,\n        username: '',\n        password: '',\n        fullname: ''\n    };\n    \n    confirm = () => {\n        const {login, username, password, fullname} = this.state;\n        if(login){\n            LoginUserMutation(username, password, user => {\n                localStorage.setItem('User', JSON.stringify(user));\n                this.props.history.push('/');\n            })\n        }else{\n            CreateUserMutation(username, password, fullname, user => {\n                localStorage.setItem('User', JSON.stringify(user));\n                this.props.history.push('/');\n            })\n        }\n    };\n\n    render() {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center'\n                }}>\n                <h4>{this.state.login ? 'Login' : 'Sign Up'}</h4>\n                <div>\n                    <input\n                        style={StyleSheet.inputText}\n                        value={this.state.username}\n                        onChange={e => {\n                            this.setState({ username: e.target.value });\n                        }}\n                        type='text'\n                        placeholder='Username'\n                    />\n                    <input\n                        style={StyleSheet.inputText}\n                        value={this.state.password}\n                        onChange={e => {\n                            this.setState({ password: e.target.value });\n                        }}\n                        type='password'\n                        placeholder='Password'\n                    />\n                    {!this.state.login && (\n                        <input\n                            style={StyleSheet.inputText}\n                            value={this.state.fullname}\n                            onChange={e => {\n                                this.setState({ fullname: e.target.value });\n                            }}\n                            type='text'\n                            placeholder='Fullname'\n                        />\n                    )}\n                </div>\n                <div>\n                    <button\n                        style={StyleSheet.inputButton}\n                        onClick={() => this.confirm()}>\n                        {this.state.login ? 'Log in' : 'Sign up'}\n                    </button>\n                    <button\n                        style={StyleSheet.inputButton}\n                        onClick={() => this.setState({ login: !this.state.login })}>\n                        {this.state.login ? 'Need to create an account?' : 'Already have an account?'}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}