{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar ConnectionHandler = require('../handlers/connection/ConnectionHandler');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar MutationTypes = Object.freeze({\n  RANGE_ADD: 'RANGE_ADD',\n  RANGE_DELETE: 'RANGE_DELETE',\n  NODE_DELETE: 'NODE_DELETE'\n});\nvar RangeOperations = Object.freeze({\n  APPEND: 'append',\n  PREPEND: 'prepend'\n});\n\nfunction convert(configs, request, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, request);\n\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n\n        break;\n\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, request);\n\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n\n        break;\n\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, request);\n\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n\n        break;\n    }\n  });\n  return {\n    optimisticUpdater: function optimisticUpdater(store, data) {\n      configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n        eachOptimisticUpdater(store, data);\n      });\n    },\n    updater: function updater(store, data) {\n      configUpdates.forEach(function (eachUpdater) {\n        eachUpdater(store, data);\n      });\n    }\n  };\n}\n\nfunction nodeDelete(config, request) {\n  var deletedIDFieldName = config.deletedIDFieldName;\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var deleteID = payload.getValue(deletedIDFieldName);\n    var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n    deleteIDs.forEach(function (id) {\n      if (id && typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    });\n  };\n}\n\nfunction rangeAdd(config, request) {\n  var parentID = config.parentID,\n      connectionInfo = config.connectionInfo,\n      edgeName = config.edgeName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_ADD ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!connectionInfo || !rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var parent = store.get(parentID);\n\n    if (!parent) {\n      return;\n    }\n\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var serverEdge = payload.getLinkedRecord(edgeName);\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = connectionInfo[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var info = _step.value;\n\n        if (!serverEdge) {\n          continue;\n        }\n\n        var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);\n\n        if (!connection) {\n          continue;\n        }\n\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n\n        if (!clientEdge) {\n          continue;\n        }\n\n        switch (info.rangeBehavior) {\n          case 'append':\n            ConnectionHandler.insertEdgeAfter(connection, clientEdge);\n            break;\n\n          case 'prepend':\n            ConnectionHandler.insertEdgeBefore(connection, clientEdge);\n            break;\n\n          default:\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_ADD range behavior `%s` ' + 'will not work as expected in RelayModern, supported range ' + \"behaviors are 'append', 'prepend'.\", info.rangeBehavior) : void 0;\n            break;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n}\n\nfunction rangeDelete(config, request) {\n  var parentID = config.parentID,\n      connectionKeys = config.connectionKeys,\n      pathToConnection = config.pathToConnection,\n      deletedIDFieldName = config.deletedIDFieldName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_DELETE ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    if (!data) {\n      return;\n    }\n\n    var deleteIDs = [];\n    var deletedIDField = data[rootField];\n\n    if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = deletedIDFieldName[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var eachField = _step2.value;\n\n          if (deletedIDField && typeof deletedIDField === 'object') {\n            deletedIDField = deletedIDField[eachField];\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (idObject) {\n          if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n            deleteIDs.push(idObject.id);\n          }\n        });\n      } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n        deleteIDs.push(deletedIDField.id);\n      }\n    } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n      deletedIDField = deletedIDField[deletedIDFieldName];\n\n      if (typeof deletedIDField === 'string') {\n        deleteIDs.push(deletedIDField);\n      } else if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (id) {\n          if (typeof id === 'string') {\n            deleteIDs.push(id);\n          }\n        });\n      }\n    }\n\n    deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n  };\n}\n\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  process.env.NODE_ENV !== \"production\" ? warning(connectionKeys != null, 'RelayDeclarativeMutationConfig: RANGE_DELETE must provide a ' + 'connectionKeys') : void 0;\n  var parent = store.get(parentID);\n\n  if (!parent) {\n    return;\n  }\n\n  if (pathToConnection.length < 2) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection') : void 0;\n    return;\n  }\n\n  var recordProxy = parent;\n\n  for (var i = 1; i < pathToConnection.length - 1; i++) {\n    if (recordProxy) {\n      recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n    }\n  } // Should never enter loop except edge cases\n\n\n  if (!connectionKeys || !recordProxy) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString()) : void 0;\n    return;\n  }\n\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var key = _step3.value;\n      var connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);\n\n      if (connection) {\n        deleteIDs.forEach(function (deleteID) {\n          ConnectionHandler.deleteNode(connection, deleteID);\n        });\n      }\n    };\n\n    for (var _iterator3 = connectionKeys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n        _iterator3[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n\nfunction getRootField(request) {\n  if (request.fragment.selections && request.fragment.selections.length > 0 && request.fragment.selections[0].kind === 'LinkedField') {\n    return request.fragment.selections[0].name;\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  MutationTypes: MutationTypes,\n  RangeOperations: RangeOperations,\n  convert: convert\n};","map":{"version":3,"sources":["/Users/xindi/xindi/relay-tutorial/node_modules/relay-runtime/lib/mutations/RelayDeclarativeMutationConfig.js"],"names":["ConnectionHandler","require","warning","MutationTypes","Object","freeze","RANGE_ADD","RANGE_DELETE","NODE_DELETE","RangeOperations","APPEND","PREPEND","convert","configs","request","optimisticUpdater","updater","configOptimisticUpdates","configUpdates","forEach","config","type","nodeDeleteResult","nodeDelete","push","rangeAddResult","rangeAdd","rangeDeleteResult","rangeDelete","store","data","eachOptimisticUpdater","eachUpdater","deletedIDFieldName","rootField","getRootField","payload","deleteID","getValue","deleteIDs","Array","isArray","id","parentID","connectionInfo","edgeName","process","env","NODE_ENV","parent","get","serverEdge","getLinkedRecord","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","info","value","connection","getConnection","key","filters","clientEdge","buildConnectionEdge","rangeBehavior","insertEdgeAfter","insertEdgeBefore","err","connectionKeys","pathToConnection","deletedIDField","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","eachField","idObject","deleteNode","length","recordProxy","i","toString","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_loop","_step3","_iterator3","fragment","selections","kind","name","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar ConnectionHandler = require('../handlers/connection/ConnectionHandler');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar MutationTypes = Object.freeze({\n  RANGE_ADD: 'RANGE_ADD',\n  RANGE_DELETE: 'RANGE_DELETE',\n  NODE_DELETE: 'NODE_DELETE'\n});\nvar RangeOperations = Object.freeze({\n  APPEND: 'append',\n  PREPEND: 'prepend'\n});\n\nfunction convert(configs, request, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, request);\n\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n\n        break;\n\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, request);\n\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n\n        break;\n\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, request);\n\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n\n        break;\n    }\n  });\n  return {\n    optimisticUpdater: function optimisticUpdater(store, data) {\n      configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n        eachOptimisticUpdater(store, data);\n      });\n    },\n    updater: function updater(store, data) {\n      configUpdates.forEach(function (eachUpdater) {\n        eachUpdater(store, data);\n      });\n    }\n  };\n}\n\nfunction nodeDelete(config, request) {\n  var deletedIDFieldName = config.deletedIDFieldName;\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var deleteID = payload.getValue(deletedIDFieldName);\n    var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n    deleteIDs.forEach(function (id) {\n      if (id && typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    });\n  };\n}\n\nfunction rangeAdd(config, request) {\n  var parentID = config.parentID,\n      connectionInfo = config.connectionInfo,\n      edgeName = config.edgeName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_ADD ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!connectionInfo || !rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var parent = store.get(parentID);\n\n    if (!parent) {\n      return;\n    }\n\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var serverEdge = payload.getLinkedRecord(edgeName);\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = connectionInfo[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var info = _step.value;\n\n        if (!serverEdge) {\n          continue;\n        }\n\n        var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);\n\n        if (!connection) {\n          continue;\n        }\n\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n\n        if (!clientEdge) {\n          continue;\n        }\n\n        switch (info.rangeBehavior) {\n          case 'append':\n            ConnectionHandler.insertEdgeAfter(connection, clientEdge);\n            break;\n\n          case 'prepend':\n            ConnectionHandler.insertEdgeBefore(connection, clientEdge);\n            break;\n\n          default:\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_ADD range behavior `%s` ' + 'will not work as expected in RelayModern, supported range ' + \"behaviors are 'append', 'prepend'.\", info.rangeBehavior) : void 0;\n            break;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n}\n\nfunction rangeDelete(config, request) {\n  var parentID = config.parentID,\n      connectionKeys = config.connectionKeys,\n      pathToConnection = config.pathToConnection,\n      deletedIDFieldName = config.deletedIDFieldName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_DELETE ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    if (!data) {\n      return;\n    }\n\n    var deleteIDs = [];\n    var deletedIDField = data[rootField];\n\n    if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = deletedIDFieldName[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var eachField = _step2.value;\n\n          if (deletedIDField && typeof deletedIDField === 'object') {\n            deletedIDField = deletedIDField[eachField];\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (idObject) {\n          if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n            deleteIDs.push(idObject.id);\n          }\n        });\n      } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n        deleteIDs.push(deletedIDField.id);\n      }\n    } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n      deletedIDField = deletedIDField[deletedIDFieldName];\n\n      if (typeof deletedIDField === 'string') {\n        deleteIDs.push(deletedIDField);\n      } else if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (id) {\n          if (typeof id === 'string') {\n            deleteIDs.push(id);\n          }\n        });\n      }\n    }\n\n    deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n  };\n}\n\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  process.env.NODE_ENV !== \"production\" ? warning(connectionKeys != null, 'RelayDeclarativeMutationConfig: RANGE_DELETE must provide a ' + 'connectionKeys') : void 0;\n  var parent = store.get(parentID);\n\n  if (!parent) {\n    return;\n  }\n\n  if (pathToConnection.length < 2) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection') : void 0;\n    return;\n  }\n\n  var recordProxy = parent;\n\n  for (var i = 1; i < pathToConnection.length - 1; i++) {\n    if (recordProxy) {\n      recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n    }\n  } // Should never enter loop except edge cases\n\n\n  if (!connectionKeys || !recordProxy) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString()) : void 0;\n    return;\n  }\n\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var key = _step3.value;\n      var connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);\n\n      if (connection) {\n        deleteIDs.forEach(function (deleteID) {\n          ConnectionHandler.deleteNode(connection, deleteID);\n        });\n      }\n    };\n\n    for (var _iterator3 = connectionKeys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n        _iterator3[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n\nfunction getRootField(request) {\n  if (request.fragment.selections && request.fragment.selections.length > 0 && request.fragment.selections[0].kind === 'LinkedField') {\n    return request.fragment.selections[0].name;\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  MutationTypes: MutationTypes,\n  RangeOperations: RangeOperations,\n  convert: convert\n};"]},"metadata":{},"sourceType":"script"}