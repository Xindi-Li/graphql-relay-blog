{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayRecordState = require('./RelayRecordState');\n\nvar EXISTENT = RelayRecordState.EXISTENT,\n    NONEXISTENT = RelayRecordState.NONEXISTENT,\n    UNKNOWN = RelayRecordState.UNKNOWN;\n/**\n * An implementation of the `MutableRecordSource` interface (defined in\n * `RelayStoreTypes`) that holds all records in memory (JS Map).\n */\n\nvar RelayMapRecordSourceMapImpl =\n/*#__PURE__*/\nfunction () {\n  function RelayMapRecordSourceMapImpl(records) {\n    var _this = this;\n\n    this._records = new Map();\n\n    if (records != null) {\n      Object.keys(records).forEach(function (key) {\n        _this._records.set(key, records[key]);\n      });\n    }\n  }\n\n  var _proto = RelayMapRecordSourceMapImpl.prototype;\n\n  _proto.clear = function clear() {\n    this._records = new Map();\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._records.set(dataID, null);\n  };\n\n  _proto.get = function get(dataID) {\n    return this._records.get(dataID);\n  };\n\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Array.from(this._records.keys());\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    if (!this._records.has(dataID)) {\n      return UNKNOWN;\n    }\n\n    return this._records.get(dataID) == null ? NONEXISTENT : EXISTENT;\n  };\n\n  _proto.has = function has(dataID) {\n    return this._records.has(dataID);\n  };\n\n  _proto.remove = function remove(dataID) {\n    this._records[\"delete\"](dataID);\n  };\n\n  _proto.set = function set(dataID, record) {\n    this._records.set(dataID, record);\n  };\n\n  _proto.size = function size() {\n    return this._records.size;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var obj = {};\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = this._records[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _step$value = _step.value,\n            key = _step$value[0],\n            value = _step$value[1];\n        obj[key] = value;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return obj;\n  };\n\n  return RelayMapRecordSourceMapImpl;\n}();\n\nmodule.exports = RelayMapRecordSourceMapImpl;","map":{"version":3,"sources":["/Users/xindi/xindi/relay-tutorial/node_modules/relay-runtime/lib/store/RelayRecordSourceMapImpl.js"],"names":["RelayRecordState","require","EXISTENT","NONEXISTENT","UNKNOWN","RelayMapRecordSourceMapImpl","records","_this","_records","Map","Object","keys","forEach","key","set","_proto","prototype","clear","_delete","dataID","get","getRecordIDs","Array","from","getStatus","has","remove","record","size","toJSON","obj","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","_step$value","value","err","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayRecordState = require('./RelayRecordState');\n\nvar EXISTENT = RelayRecordState.EXISTENT,\n    NONEXISTENT = RelayRecordState.NONEXISTENT,\n    UNKNOWN = RelayRecordState.UNKNOWN;\n/**\n * An implementation of the `MutableRecordSource` interface (defined in\n * `RelayStoreTypes`) that holds all records in memory (JS Map).\n */\n\nvar RelayMapRecordSourceMapImpl =\n/*#__PURE__*/\nfunction () {\n  function RelayMapRecordSourceMapImpl(records) {\n    var _this = this;\n\n    this._records = new Map();\n\n    if (records != null) {\n      Object.keys(records).forEach(function (key) {\n        _this._records.set(key, records[key]);\n      });\n    }\n  }\n\n  var _proto = RelayMapRecordSourceMapImpl.prototype;\n\n  _proto.clear = function clear() {\n    this._records = new Map();\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._records.set(dataID, null);\n  };\n\n  _proto.get = function get(dataID) {\n    return this._records.get(dataID);\n  };\n\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Array.from(this._records.keys());\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    if (!this._records.has(dataID)) {\n      return UNKNOWN;\n    }\n\n    return this._records.get(dataID) == null ? NONEXISTENT : EXISTENT;\n  };\n\n  _proto.has = function has(dataID) {\n    return this._records.has(dataID);\n  };\n\n  _proto.remove = function remove(dataID) {\n    this._records[\"delete\"](dataID);\n  };\n\n  _proto.set = function set(dataID, record) {\n    this._records.set(dataID, record);\n  };\n\n  _proto.size = function size() {\n    return this._records.size;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var obj = {};\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = this._records[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _step$value = _step.value,\n            key = _step$value[0],\n            value = _step$value[1];\n        obj[key] = value;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return obj;\n  };\n\n  return RelayMapRecordSourceMapImpl;\n}();\n\nmodule.exports = RelayMapRecordSourceMapImpl;"]},"metadata":{},"sourceType":"script"}