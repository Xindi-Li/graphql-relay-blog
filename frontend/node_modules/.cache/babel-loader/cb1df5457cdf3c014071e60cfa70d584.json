{"ast":null,"code":"var _ListPage_viewer,\n    _ListPageForwardQuery,\n    _jsxFileName = \"/Users/xindi/xindi/relay-tutorial/src/components/ListPage.js\";\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createFragmentContainer, createPaginationContainer, graphql } from 'react-relay';\nimport Post from './Post';\nconst styles = {\n  listPageWrapper: {\n    marginTop: 20,\n    textAlign: 'center'\n  },\n  postButtonWrapper: {\n    padding: 10,\n    background: 'white',\n    border: '2px solid indianred',\n    color: 'indianred',\n    borderRadius: 6,\n    marginTop: 10,\n    marginBottom: 10\n  },\n  buttonWrapper: {\n    padding: 10,\n    background: 'white',\n    border: '2px solid indianred',\n    color: 'indianred',\n    borderRadius: 6,\n    marginTop: 10,\n    marginBottom: 10,\n    marginLeft: 10,\n    textDecoration: 'underline',\n    cursor: 'pointer'\n  }\n};\n\nclass ListPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem('User');\n\n    if (user) {\n      this.setState({\n        user: JSON.parse(user)\n      });\n    }\n  }\n\n  _loadMore() {\n    if (!this.props.relay.hasMore()) {\n      console.log('Nothing more to load');\n      return;\n    } else if (this.props.relay.isLoading()) {\n      console.log('Request loading');\n      return;\n    }\n\n    this.props.relay.loadMore(1);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: styles.listPageWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Link, {\n      style: styles.postButtonWrapper,\n      to: \"/create-post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"+ New Post\"), !this.state.user && React.createElement(Link, {\n      style: styles.buttonWrapper,\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Login\"), this.state.user && React.createElement(\"a\", {\n      onClick: () => {\n        localStorage.removeItem('User');\n        window.location.reload();\n      },\n      style: styles.buttonWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.props.viewer.allPosts.edges.map(({\n      node\n    }) => {\n      return React.createElement(Post, {\n        key: node.__id,\n        post: node,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    })), React.createElement(\"button\", {\n      style: styles.buttonWrapper,\n      onClick: () => this._loadMore(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Load More\"));\n  }\n\n}\n\nexport default createPaginationContainer(ListPage, {\n  viewer: _ListPage_viewer !== void 0 ? _ListPage_viewer : (_ListPage_viewer = require(\"./__generated__/ListPage_viewer.graphql\"), _ListPage_viewer.hash && _ListPage_viewer.hash !== \"57141b383f91e3d35b1c8c3a7059dd83\" && console.error(\"The definition of 'ListPage_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _ListPage_viewer)\n}, {\n  direction: 'forward',\n  query: _ListPageForwardQuery !== void 0 ? _ListPageForwardQuery : (_ListPageForwardQuery = require(\"./__generated__/ListPageForwardQuery.graphql\"), _ListPageForwardQuery.hash && _ListPageForwardQuery.hash !== \"1bb23891ed6322448c471801e53f44fb\" && console.error(\"The definition of 'ListPageForwardQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _ListPageForwardQuery),\n\n  getConnectionFromProps(props) {\n    return props.viewer && props.viewer.allPosts;\n  },\n\n  getFragmentVariables(prevVars, totalCount) {\n    return { ...prevVars,\n      count: totalCount\n    };\n  },\n\n  getVariables(props, {\n    count,\n    cursor\n  }, fragmentVariables) {\n    return {\n      count: count,\n      after: cursor\n    };\n  }\n\n});","map":{"version":3,"sources":["/Users/xindi/xindi/relay-tutorial/src/components/ListPage.js"],"names":["React","Link","createFragmentContainer","createPaginationContainer","graphql","Post","styles","listPageWrapper","marginTop","textAlign","postButtonWrapper","padding","background","border","color","borderRadius","marginBottom","buttonWrapper","marginLeft","textDecoration","cursor","ListPage","Component","state","user","componentDidMount","localStorage","getItem","setState","JSON","parse","_loadMore","props","relay","hasMore","console","log","isLoading","loadMore","render","removeItem","window","location","reload","viewer","allPosts","edges","map","node","__id","direction","query","getConnectionFromProps","getFragmentVariables","prevVars","totalCount","count","getVariables","fragmentVariables","after"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { createFragmentContainer, createPaginationContainer, graphql } from 'react-relay';\nimport Post from './Post';\n\nconst styles = {\n    listPageWrapper: { marginTop: 20, textAlign: 'center' },\n    postButtonWrapper: {\n        padding: 10,\n        background: 'white',\n        border: '2px solid indianred',\n        color: 'indianred',\n        borderRadius: 6,\n        marginTop: 10,\n        marginBottom: 10,\n    },\n    buttonWrapper: {\n        padding: 10,\n        background: 'white',\n        border: '2px solid indianred',\n        color: 'indianred',\n        borderRadius: 6,\n        marginTop: 10,\n        marginBottom: 10,\n        marginLeft: 10,\n        textDecoration: 'underline',\n        cursor: 'pointer'\n    }\n};\n\nclass ListPage extends React.Component {\n    state = {\n        user: null\n    };\n\n    componentDidMount() {\n        const user = localStorage.getItem('User');\n        if (user) {\n            this.setState({ user: JSON.parse(user) });\n        }\n    }\n\n    _loadMore() {\n        if (!this.props.relay.hasMore()) {\n            console.log('Nothing more to load');\n            return;\n        } else if (this.props.relay.isLoading()) {\n            console.log('Request loading');\n            return;\n        }\n\n        this.props.relay.loadMore(\n            1,\n        );\n    }\n\n    render() {\n        return (\n            <div style={styles.listPageWrapper}>\n                <Link style={styles.postButtonWrapper} to=\"/create-post\">\n                    + New Post\n                </Link>\n                {!this.state.user && (\n                    <Link style={styles.buttonWrapper} to=\"/login\">\n                        Login\n                    </Link>\n                )}\n                {this.state.user && (\n                    <a\n                        onClick={() => {\n                            localStorage.removeItem('User');\n                            window.location.reload();\n                        }}\n                        style={styles.buttonWrapper}\n                    >\n                        Logout\n                    </a>\n                )}\n                <div style={{ marginTop: 20 }}>\n                    {this.props.viewer.allPosts.edges.map(({ node }) => {\n                        return <Post key={node.__id} post={node} />;\n                    })}\n                </div>\n\n                <button style={styles.buttonWrapper} onClick={() => this._loadMore()}>\n                    Load More\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default createPaginationContainer(\n    ListPage,\n    {\n        viewer: graphql`\n        fragment ListPage_viewer on Viewer {\n            allPosts(first: $count, after:$after, order:\"DESC\")\n                @connection(key: \"ListPage_allPosts\", filters: []){\n                    edges{\n                        node{\n                            ...Post_post\n                        }\n                    }\n                    pageInfo{\n                        hasNextPage\n                        endCursor\n                    }\n                }\n        }\n        `\n    },\n    {\n        direction: 'forward',\n        query: graphql`\n            query ListPageForwardQuery($count: Int!, $after: String){\n                viewer{\n                    ...ListPage_viewer\n                }\n            }\n        `,\n        getConnectionFromProps(props) {\n            return props.viewer && props.viewer.allPosts;\n        },\n        getFragmentVariables(prevVars, totalCount) {\n            return {\n                ...prevVars,\n                count: totalCount,\n            };\n        },\n        getVariables(props, { count, cursor }, fragmentVariables) {\n            return {\n                count: count,\n                after: cursor,\n            };\n        }\n    }\n);"]},"metadata":{},"sourceType":"module"}