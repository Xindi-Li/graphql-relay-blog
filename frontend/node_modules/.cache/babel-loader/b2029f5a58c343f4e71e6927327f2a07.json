{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n/**\n * Represents a common GraphQL request with `text` (or persisted `id`) can be\n * used to execute it, an `operation` containing information to normalize the\n * results, and a `fragment` derived from that operation to read the response\n * data (masking data from child fragments).\n */\n\n/**\n * Contains the `text` (or persisted `id`) required for executing a common\n * GraphQL request.\n */\n\nvar RelayConcreteNode = {\n  CONDITION: 'Condition',\n  CLIENT_EXTENSION: 'ClientExtension',\n  DEFER: 'Defer',\n  CONNECTION: 'Connection',\n  FRAGMENT: 'Fragment',\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_DATA_FRAGMENT_SPREAD: 'InlineDataFragmentSpread',\n  INLINE_DATA_FRAGMENT: 'InlineDataFragment',\n  INLINE_FRAGMENT: 'InlineFragment',\n  LINKED_FIELD: 'LinkedField',\n  LINKED_HANDLE: 'LinkedHandle',\n  LITERAL: 'Literal',\n  LIST_VALUE: 'ListValue',\n  LOCAL_ARGUMENT: 'LocalArgument',\n  MODULE_IMPORT: 'ModuleImport',\n  OBJECT_VALUE: 'ObjectValue',\n  OPERATION: 'Operation',\n  REQUEST: 'Request',\n  ROOT_ARGUMENT: 'RootArgument',\n  SCALAR_FIELD: 'ScalarField',\n  SCALAR_HANDLE: 'ScalarHandle',\n  SPLIT_OPERATION: 'SplitOperation',\n  STREAM: 'Stream',\n  VARIABLE: 'Variable'\n};\nmodule.exports = RelayConcreteNode;","map":{"version":3,"sources":["/Users/xindi/xindi/graphql-relay-blog/frontend/node_modules/relay-runtime/lib/util/RelayConcreteNode.js"],"names":["RelayConcreteNode","CONDITION","CLIENT_EXTENSION","DEFER","CONNECTION","FRAGMENT","FRAGMENT_SPREAD","INLINE_DATA_FRAGMENT_SPREAD","INLINE_DATA_FRAGMENT","INLINE_FRAGMENT","LINKED_FIELD","LINKED_HANDLE","LITERAL","LIST_VALUE","LOCAL_ARGUMENT","MODULE_IMPORT","OBJECT_VALUE","OPERATION","REQUEST","ROOT_ARGUMENT","SCALAR_FIELD","SCALAR_HANDLE","SPLIT_OPERATION","STREAM","VARIABLE","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;AACA;AAEA;;;;;;;AAOA;;;;;AAIA,IAAIA,iBAAiB,GAAG;AACtBC,EAAAA,SAAS,EAAE,WADW;AAEtBC,EAAAA,gBAAgB,EAAE,iBAFI;AAGtBC,EAAAA,KAAK,EAAE,OAHe;AAItBC,EAAAA,UAAU,EAAE,YAJU;AAKtBC,EAAAA,QAAQ,EAAE,UALY;AAMtBC,EAAAA,eAAe,EAAE,gBANK;AAOtBC,EAAAA,2BAA2B,EAAE,0BAPP;AAQtBC,EAAAA,oBAAoB,EAAE,oBARA;AAStBC,EAAAA,eAAe,EAAE,gBATK;AAUtBC,EAAAA,YAAY,EAAE,aAVQ;AAWtBC,EAAAA,aAAa,EAAE,cAXO;AAYtBC,EAAAA,OAAO,EAAE,SAZa;AAatBC,EAAAA,UAAU,EAAE,WAbU;AActBC,EAAAA,cAAc,EAAE,eAdM;AAetBC,EAAAA,aAAa,EAAE,cAfO;AAgBtBC,EAAAA,YAAY,EAAE,aAhBQ;AAiBtBC,EAAAA,SAAS,EAAE,WAjBW;AAkBtBC,EAAAA,OAAO,EAAE,SAlBa;AAmBtBC,EAAAA,aAAa,EAAE,cAnBO;AAoBtBC,EAAAA,YAAY,EAAE,aApBQ;AAqBtBC,EAAAA,aAAa,EAAE,cArBO;AAsBtBC,EAAAA,eAAe,EAAE,gBAtBK;AAuBtBC,EAAAA,MAAM,EAAE,QAvBc;AAwBtBC,EAAAA,QAAQ,EAAE;AAxBY,CAAxB;AA0BAC,MAAM,CAACC,OAAP,GAAiB1B,iBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\n/**\n * Represents a common GraphQL request with `text` (or persisted `id`) can be\n * used to execute it, an `operation` containing information to normalize the\n * results, and a `fragment` derived from that operation to read the response\n * data (masking data from child fragments).\n */\n\n/**\n * Contains the `text` (or persisted `id`) required for executing a common\n * GraphQL request.\n */\nvar RelayConcreteNode = {\n  CONDITION: 'Condition',\n  CLIENT_EXTENSION: 'ClientExtension',\n  DEFER: 'Defer',\n  CONNECTION: 'Connection',\n  FRAGMENT: 'Fragment',\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_DATA_FRAGMENT_SPREAD: 'InlineDataFragmentSpread',\n  INLINE_DATA_FRAGMENT: 'InlineDataFragment',\n  INLINE_FRAGMENT: 'InlineFragment',\n  LINKED_FIELD: 'LinkedField',\n  LINKED_HANDLE: 'LinkedHandle',\n  LITERAL: 'Literal',\n  LIST_VALUE: 'ListValue',\n  LOCAL_ARGUMENT: 'LocalArgument',\n  MODULE_IMPORT: 'ModuleImport',\n  OBJECT_VALUE: 'ObjectValue',\n  OPERATION: 'Operation',\n  REQUEST: 'Request',\n  ROOT_ARGUMENT: 'RootArgument',\n  SCALAR_FIELD: 'ScalarField',\n  SCALAR_HANDLE: 'ScalarHandle',\n  SPLIT_OPERATION: 'SplitOperation',\n  STREAM: 'Stream',\n  VARIABLE: 'Variable'\n};\nmodule.exports = RelayConcreteNode;"]},"metadata":{},"sourceType":"script"}