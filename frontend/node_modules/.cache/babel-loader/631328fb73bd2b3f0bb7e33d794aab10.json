{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _require = require('relay-runtime'),\n    getSelector = _require.getSelector;\n\nfunction getRootVariablesForFragments(fragments, props) {\n  var rootVariables = {}; // NOTE: For extra safety, we make sure the rootVariables include the\n  // variables from all owners in this fragmentSpec, even though they\n  // should all point to the same owner\n\n  Object.keys(fragments).forEach(function (key) {\n    var _ref, _selector$selectors$, _ref2;\n\n    var fragmentNode = fragments[key];\n    var fragmentRef = props[key];\n    var selector = getSelector(fragmentNode, fragmentRef);\n    var fragmentOwnerVariables = selector != null && selector.kind === 'PluralReaderSelector' ? (_ref = (_selector$selectors$ = selector.selectors[0]) === null || _selector$selectors$ === void 0 ? void 0 : _selector$selectors$.owner.variables) !== null && _ref !== void 0 ? _ref : {} : (_ref2 = selector === null || selector === void 0 ? void 0 : selector.owner.variables) !== null && _ref2 !== void 0 ? _ref2 : {};\n    rootVariables = (0, _objectSpread2[\"default\"])({}, rootVariables, fragmentOwnerVariables);\n  });\n  return rootVariables;\n}\n\nmodule.exports = getRootVariablesForFragments;","map":{"version":3,"sources":["/Users/xindi/xindi/graphql-relay-blog/frontend/node_modules/react-relay/lib/getRootVariablesForFragments.js"],"names":["_interopRequireDefault","require","_objectSpread2","_require","getSelector","getRootVariablesForFragments","fragments","props","rootVariables","Object","keys","forEach","key","_ref","_selector$selectors$","_ref2","fragmentNode","fragmentRef","selector","fragmentOwnerVariables","kind","selectors","owner","variables","module","exports"],"mappings":"AAAA;;;;;;;;;AASA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,cAAc,GAAGF,sBAAsB,CAACC,OAAO,CAAC,qCAAD,CAAR,CAA3C;;AAEA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,eAAD,CAAtB;AAAA,IACIG,WAAW,GAAGD,QAAQ,CAACC,WAD3B;;AAGA,SAASC,4BAAT,CAAsCC,SAAtC,EAAiDC,KAAjD,EAAwD;AACtD,MAAIC,aAAa,GAAG,EAApB,CADsD,CAC9B;AACxB;AACA;;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,OAAvB,CAA+B,UAAUC,GAAV,EAAe;AAC5C,QAAIC,IAAJ,EAAUC,oBAAV,EAAgCC,KAAhC;;AAEA,QAAIC,YAAY,GAAGV,SAAS,CAACM,GAAD,CAA5B;AACA,QAAIK,WAAW,GAAGV,KAAK,CAACK,GAAD,CAAvB;AACA,QAAIM,QAAQ,GAAGd,WAAW,CAACY,YAAD,EAAeC,WAAf,CAA1B;AACA,QAAIE,sBAAsB,GAAGD,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACE,IAAT,KAAkB,sBAAtC,GAA+D,CAACP,IAAI,GAAG,CAACC,oBAAoB,GAAGI,QAAQ,CAACG,SAAT,CAAmB,CAAnB,CAAxB,MAAmD,IAAnD,IAA2DP,oBAAoB,KAAK,KAAK,CAAzF,GAA6F,KAAK,CAAlG,GAAsGA,oBAAoB,CAACQ,KAArB,CAA2BC,SAAzI,MAAwJ,IAAxJ,IAAgKV,IAAI,KAAK,KAAK,CAA9K,GAAkLA,IAAlL,GAAyL,EAAxP,GAA6P,CAACE,KAAK,GAAGG,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACI,KAAT,CAAeC,SAA5E,MAA2F,IAA3F,IAAmGR,KAAK,KAAK,KAAK,CAAlH,GAAsHA,KAAtH,GAA8H,EAAxZ;AACAP,IAAAA,aAAa,GAAG,CAAC,GAAGN,cAAc,CAAC,SAAD,CAAlB,EAA+B,EAA/B,EAAmCM,aAAnC,EAAkDW,sBAAlD,CAAhB;AACD,GARD;AASA,SAAOX,aAAP;AACD;;AAEDgB,MAAM,CAACC,OAAP,GAAiBpB,4BAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _require = require('relay-runtime'),\n    getSelector = _require.getSelector;\n\nfunction getRootVariablesForFragments(fragments, props) {\n  var rootVariables = {}; // NOTE: For extra safety, we make sure the rootVariables include the\n  // variables from all owners in this fragmentSpec, even though they\n  // should all point to the same owner\n\n  Object.keys(fragments).forEach(function (key) {\n    var _ref, _selector$selectors$, _ref2;\n\n    var fragmentNode = fragments[key];\n    var fragmentRef = props[key];\n    var selector = getSelector(fragmentNode, fragmentRef);\n    var fragmentOwnerVariables = selector != null && selector.kind === 'PluralReaderSelector' ? (_ref = (_selector$selectors$ = selector.selectors[0]) === null || _selector$selectors$ === void 0 ? void 0 : _selector$selectors$.owner.variables) !== null && _ref !== void 0 ? _ref : {} : (_ref2 = selector === null || selector === void 0 ? void 0 : selector.owner.variables) !== null && _ref2 !== void 0 ? _ref2 : {};\n    rootVariables = (0, _objectSpread2[\"default\"])({}, rootVariables, fragmentOwnerVariables);\n  });\n  return rootVariables;\n}\n\nmodule.exports = getRootVariablesForFragments;"]},"metadata":{},"sourceType":"script"}