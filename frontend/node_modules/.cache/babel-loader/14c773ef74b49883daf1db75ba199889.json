{"ast":null,"code":"var _AppAllPostQuery,\n    _jsxFileName = \"/Users/xindi/xindi/graphql-relay-blog/frontend/src/App.js\";\n\nimport React from 'react';\nimport './App.css';\nimport ListPage from './components/ListPage';\nimport { QueryRenderer, graphql } from 'react-relay';\nimport environment from './Environment';\nconst appAllPostQuery = _AppAllPostQuery !== void 0 ? _AppAllPostQuery : (_AppAllPostQuery = require(\"./__generated__/AppAllPostQuery.graphql\"), _AppAllPostQuery.hash && _AppAllPostQuery.hash !== \"245eafaf6ebd6ab5843c383a60b4ed5c\" && console.error(\"The definition of 'AppAllPostQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _AppAllPostQuery);\n\nfunction App() {\n  return React.createElement(QueryRenderer, {\n    environment: environment,\n    query: appAllPostQuery,\n    variables: {\n      count: 1\n    },\n    render: ({\n      error,\n      props\n    }) => {\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, error.message);\n      } else if (props) {\n        return React.createElement(ListPage, {\n          viewer: props.viewer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Loading\");\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/xindi/xindi/graphql-relay-blog/frontend/src/App.js"],"names":["React","ListPage","QueryRenderer","graphql","environment","appAllPostQuery","App","count","error","props","message","viewer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,aAAvC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,eAAe,sYAArB;;AAQA,SAASC,GAAT,GAAe;AACd,SACC,oBAAC,aAAD;AACC,IAAA,WAAW,EAAEF,WADd;AAEC,IAAA,KAAK,EAAEC,eAFR;AAGC,IAAA,SAAS,EAAE;AACVE,MAAAA,KAAK,EAAE;AADG,KAHZ;AAMC,IAAA,MAAM,EACL,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAsB;AACrB,UAAID,KAAJ,EAAW;AACV,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,KAAK,CAACE,OAAZ,CAAP;AACA,OAFD,MAEM,IAAGD,KAAH,EAAS;AACd,eAAO,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAEA,KAAK,CAACE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,OAFK,MAED;AACJ,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACA;AACD,KAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAoBA;;AAED,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ListPage from './components/ListPage';\n\nimport { QueryRenderer, graphql } from 'react-relay';\nimport environment from './Environment';\n\nconst appAllPostQuery = graphql`\n  query AppAllPostQuery($count: Int!, $after: String){\n    viewer{\n      ...ListPage_viewer\n    }\n  }\n`;\n\nfunction App() {\n\treturn (\n\t\t<QueryRenderer\n\t\t\tenvironment={environment}\n\t\t\tquery={appAllPostQuery}\n\t\t\tvariables={{\n\t\t\t\tcount: 1\n\t\t\t}}\n\t\t\trender={\n\t\t\t\t({ error, props }) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treturn <div>{error.message}</div>\n\t\t\t\t\t}else if(props){\n\t\t\t\t\t\treturn <ListPage viewer={props.viewer}/>\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn <div>Loading</div>\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}